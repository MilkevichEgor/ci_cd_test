image: docker:latest
stages:
  - deploy

services:
  - postgres:latest
variables:
  POSTGRES_DB: "fusiondb"
  POSTGRES_HOST: postgres
  POSTGRES_USER: "fusion"
  POSTGRES_PASSWORD: "fusion"
  
deploy:
  stage: deploy    
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - sudo apt update && apt install openssh-server
    # - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd /home/fusion/project_em/books-store; touch file1.txt;"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd /home/fusion/project_em/books-store; git pull"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd /home/fusion/project_em/books-store/dev_ops-back; npm i;"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd /home/fusion/project_em/books-store/dev_ops-front; npm i;"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd /home/fusion/project_em/books-store; docker compose up -d"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd /home/fusion/project_em/books-store; docker exec -i app-backend npm run db:migrate:up"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "cd /home/fusion/project_em/books-store; docker exec -i app-backend npm run db:seed"

